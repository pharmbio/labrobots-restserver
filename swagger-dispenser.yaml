swagger: '2.0'
info:
  title: BioTek Dispenser API
  version: "0.1"
  description: API to execute operations on dispenser
consumes:
  - application/json
produces:
  - application/json
paths:
  /status:
    get:
      tags: [status]
      operationId: dispenser.status
      summary: Queries for status
      responses:
        200:
          description: Return response
          schema:
            $ref: '#/definitions/RobotResponse'

  /is_ready:
    get:
      tags: [is_ready]
      operationId: dispenser.is_ready
      summary: Queries for ready status
      responses:
        200:
          description: Return response
          schema:
            $ref: '#/definitions/RobotResponse'
        404:
          description: Some kind of error, verbose output should be attached

  /execute_protocol/{protocol_name}:
    get:
      tags: [execute_protocol]
      operationId: dispenser.execute_protocol
      summary: Executes a specified protocol
      parameters:
        - $ref: '#/parameters/protocol_name'
      responses:
        200:
          description: Return response
          schema:
            $ref: '#/definitions/RobotResponse'
        404:
          description: Some kind of error, verbose output should be attached


parameters:
  prog_id:
    name: protocol_name
    description: Protocol name
    in: path
    type: string
    required: true
    pattern: "^[a-zA-Z0-9-]+$"

definitions:
  RobotResponse:
    type: object
    required:
      - stdout
      - response_code
      - description
    properties:
      stdout:
        type: string
        description: Complete backend stdoutput/stderror from command
        example: "Execution successful OK"
        readOnly: true
      response_code:
        type: string
        description: The response code number
        example: "43"
        minLength: 1
      description:
        type: string
        description: Response described in cleartext
        example: "Busy"
        minLength: 1

#security:
#  # enable OAuth protection for all REST endpoints
#  # (only active if the TOKENINFO_URL environment variable is set)
#  - oauth2: [uid]

#securityDefinitions:
#  oauth2:
#    type: oauth2
#    flow: implicit
#    authorizationUrl: https://example.com/oauth2/dialog
#    scopes:
#      uid: Unique identifier of the user accessing the service.
